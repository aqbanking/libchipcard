<cards>
  <card name="ddv0" extends="ProcessorCard" type="processor" >
    <cardinfo>
      <name>HBCICard</name>
      <descr>
        HBCI card, old style (used before 2001)
      </descr>
      <atr>3bef00ff81314245656306030302500006144a9047024038</atr>
    </cardinfo>
    
    <apps>
      <app name="ddv0" />
    </apps
  
    <commands>

      <!-- Verify PIN -->
      <command name="VerifyPin" driver="orga_ctapi">
        <send>
	  			<APDU >
  	    		<ELEM type="dword">0x00200081</ELEM>
	  			</APDU>
	  			<DATA>
	    			<ELEM name="pin" type="fpin2" minsize="4" maxsize="8" />
	  			</DATA>
				</send>
				<results>
      		<result sw1="0x63" sw2="0xc0" type="error" >
            Bad PIN (only one try left !)
          </result>
      		<result sw1="0x63" type="error" >Bad PIN</result>
      		<result sw1="0x63" sw2="0xc1" type="error" >
            Bad PIN (only two tries left !)
          </result>
      		<result sw1="0x63" sw2="0xc2" type="error" >
            Bad PIN (only three tries left !)
          </result>
      		<result sw1="0x69" sw2="0x83" type="error" >
            Card seems to be destroyed, this might have the following reasons:
             1) you entered a bad PIN too often
             2) the card is of a new and yet unknown type
          </result>
				</results>
      </command>

      <!-- Get 8 byte random number -->
      <command name="GetChallenge" driver="orga_ctapi">
        <send>
	  			<APDU lr="0" >
  	    		<ELEM type="dword">0x00840000</ELEM>
	  			</APDU>
				</send>
				<responses>
	  			<response type="success">
	    			<ELEM name="challenge" type="bytes" minsize="8" maxsize="8" />
          </response>
        </responses>
      </command>

      <!-- Let card authenticate itself (used for encryption) -->
      <command name="CryptBlock" driver="orga_ctapi">
        <send>
	  			<APDU lr="0" >
  	    		<ELEM type="dword">0x00880080</ELEM>
	  			</APDU>
	  			<DATA>
	    			<ELEM name="in" type="bytes" minsize="8" maxsize="8" />
          </DATA>
				</send>
				<responses>
	  			<response type="success">
	    			<ELEM name="out" type="bytes" minsize="8" maxsize="8" />
          </response>
        </responses>
      </command>

      <!-- Writes the right 12 bytes of a hash to the file EF_MAC -->
      <command name="WriteHashR" driver="orga_ctapi">
        <send>
	  			<APDU>
  	    		<ELEM type="dword">0x00dc01dc</ELEM>
	  			</APDU>
	  			<DATA>
	    			<ELEM name="hashR" type="bytes" size="12" />
          </DATA>
				</send>
				<results>
      		<result sw1="0x69" sw2="0x82" type="error" >
            You must verify then PIN before using this command
          </result>
				</results>
      </command>

      <!-- Writes the left 8 bytes of a hash to the file EF_MAC -->
      <command name="WriteHashL" driver="orga_ctapi">
        <send>
	  			<APDU>
  	    		<ELEM type="dword">0x00da0100</ELEM>
	  			</APDU>
	  			<DATA>
	    			<ELEM name="hashL" type="bytes" size="8" />
          </DATA>
				</send>
				<results>
      		<result sw1="0x69" sw2="0x82" type="error" >
            You must verify then PIN before using this command
          </result>
				</results>
      </command>

      <!-- Read signed hash -->
      <command name="ReadSignedHash" driver="orga_ctapi">
        <send>
	  			<APDU lr="20" >
  	    		<ELEM type="dword">0x04b201dc</ELEM>
	  			</APDU>
				</send>
				<results>
      		<result sw1="0x69" sw2="0x82" type="error" >
            You must verify then PIN before using this command
          </result>
				</results>
				<responses>
	  			<response type="success">
            <ELEM name="trash" type="bytes" size="12" />
	    			<ELEM name="signedHash" type="bytes" size="8" />
          </response>
        </responses>
      </command>


    </commands>

    
    <!-- generic command responses -->
    <results>
    </results>

  </card>
</cards>

