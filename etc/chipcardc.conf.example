# $RCSfile$
#                             -------------------
#    cvs         : $Id$
#    begin       : Mon Mar 01 2004
#    copyright   : (C) 2004 by Martin Preuss
#    email       : martin@libchipcard.de
#
# ***************************************************************************
# *          Please see toplevel file COPYING for license details           *
# ***************************************************************************/
#
#
# This file is used by chipcard client programs.
# Please modify it to your needs and copy it to 
#              $PREFIX/etc/chipcard/client/chipcardc.conf
#

#
# Each server section tells a chipcard client where a chipcard-server
# is sitting.
#
server {
  #
  # Connection type the server uses, currently supported are these:
  #
  # - "local"
  #   local server, using Unix Domain Sockets which can only be
  #   connected from the very same machine. In this case "addr" must point
  #   to the socket file used by the server.
  #   Some systems to not support these kinds of sockets (most notably
  #   Win32 systems).
  #   On all other systems this is the recommended type if no authentification
  #   is needed.
  # 
  # - "public"
  #   server using TCP sockets (not encrypted, for security reasons you should
  #   not use such a server with chipcard)
  #
  # - "private"
  #   server using SSL secured sockets.
  #   New certificates are stored in the folder given by "newcertdir",
  #   received certificates are checked against those in "certdir"
  #   This is the recommended type if "local" is not available.
  #
  # - "secure"
  #   server using SSL secured sockets. In addition to mode
  #   "private" the certificate of the server is checked against
  #   those stored in the "certdir". If the server certificate could
  #   not be found or is invalid the connection is aborted.
  #
  typ="local"

  #
  # address the server is listening on (or socket file if type is "local")
  #
  addr="/var/run/chipcard.comm"
  
  #
  # TCP port the server is listening on (not used if type is "local")
  #
  #port="55555"

} # server


server.inactive {
  #
  # Connection type the server uses, currently supported are these:
  #
  # - "local"
  #   local server, using Unix Domain Sockets which can only be
  #   connected from the very same machine. In this case "addr" must point
  #   to the socket file used by the server.
  #   Some systems to not support these kinds of sockets (most notably
  #   Win32 systems).
  #   On all other systems this is the recommended type if no authentification
  #   is needed.
  # 
  # - "public"
  #   server using TCP sockets (not encrypted, for security reasons you should
  #   not use such a server with chipcard)
  #
  # - "private"
  #   server using SSL secured sockets.
  #   New certificates are stored in the folder given by "newcertdir",
  #   received certificates are checked against those in "certdir"
  #   This is the recommended type if "local" is not available.
  #
  # - "secure"
  #   server using SSL secured sockets. In addition to mode
  #   "private" the certificate of the server is checked against
  #   those stored in the "certdir". If the server certificate could
  #   not be found or is invalid the connection is aborted.
  #
  typ="secure"

  #
  # address the server is listening on (or socket file if type is "local")
  #
  addr="127.0.0.0"
  
  #
  # TCP port the server is listening on (not used if type is "local")
  #
  port="44444"

  certfile="/usr/etc/chipcard/slave/slave_cert.pem"
  keyfile="/usr/etc/chipcard/slave/slave_key.pem"
  cafile="/usr/etc/chipcard/slave/ca_cert.pem"

} # server




