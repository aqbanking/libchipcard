/* This file is auto-generated from "lockrequest.xml" by the typemaker
   tool of Gwenhywfar. 
   Do not edit this file -- all changes will be lost! */
#ifndef LOCKREQUEST_L_H
#define LOCKREQUEST_L_H

/** @page P_LCCM_LOCKREQUEST_LIB LCCM_LockRequest (lib)
This page describes the properties of LCCM_LOCKREQUEST
*/
#ifdef __cplusplus
extern "C" {
#endif

typedef struct LCCM_LOCKREQUEST LCCM_LOCKREQUEST;

#ifdef __cplusplus
} /* __cplusplus */
#endif

#include <gwenhywfar/misc.h>
#include <gwenhywfar/misc.h>
#include <gwenhywfar/db.h>
#include <gwenhywfar/types.h>
#include <gwenhywfar/gwentime.h>

#ifdef __cplusplus
extern "C" {
#endif

GWEN_LIST_FUNCTION_DEFS(LCCM_LOCKREQUEST, LCCM_LockRequest)
LCCM_LOCKREQUEST_LIST *LCCM_LockRequest_List_dup(const LCCM_LOCKREQUEST_LIST *stl);
LCCM_LOCKREQUEST *LCCM_LockRequest_new();
void LCCM_LockRequest_free(LCCM_LOCKREQUEST *st);
void LCCM_LockRequest_Attach(LCCM_LOCKREQUEST *st);
LCCM_LOCKREQUEST *LCCM_LockRequest_dup(const LCCM_LOCKREQUEST*st);LCCM_LOCKREQUEST *LCCM_LockRequest_fromDb(GWEN_DB_NODE *db);int LCCM_LockRequest_toDb(const LCCM_LOCKREQUEST*st, GWEN_DB_NODE *db);int LCCM_LockRequest_IsModified(const LCCM_LOCKREQUEST *st);
void LCCM_LockRequest_SetModified(LCCM_LOCKREQUEST *st, int i);

/**
* Returns the property @ref LCCM_LOCKREQUEST_RequestId
*/
GWEN_TYPE_UINT32 LCCM_LockRequest_GetRequestId(const LCCM_LOCKREQUEST *el);
/**
* Set the property @ref LCCM_LOCKREQUEST_RequestId
*/
void LCCM_LockRequest_SetRequestId(LCCM_LOCKREQUEST *el, GWEN_TYPE_UINT32 d);

/**
* Returns the property @ref LCCM_LOCKREQUEST_ClientId
*/
GWEN_TYPE_UINT32 LCCM_LockRequest_GetClientId(const LCCM_LOCKREQUEST *el);
/**
* Set the property @ref LCCM_LOCKREQUEST_ClientId
*/
void LCCM_LockRequest_SetClientId(LCCM_LOCKREQUEST *el, GWEN_TYPE_UINT32 d);

/**
* Returns the property @ref LCCM_LOCKREQUEST_LockTime
*/
const GWEN_TIME *LCCM_LockRequest_GetLockTime(const LCCM_LOCKREQUEST *el);
/**
* Set the property @ref LCCM_LOCKREQUEST_LockTime
*/
void LCCM_LockRequest_SetLockTime(LCCM_LOCKREQUEST *el, const GWEN_TIME *d);

/**
* Returns the property @ref LCCM_LOCKREQUEST_Duration
*/
int LCCM_LockRequest_GetDuration(const LCCM_LOCKREQUEST *el);
/**
* Set the property @ref LCCM_LOCKREQUEST_Duration
*/
void LCCM_LockRequest_SetDuration(LCCM_LOCKREQUEST *el, int d);

/**
* Returns the property @ref LCCM_LOCKREQUEST_LockUntil
*/
const GWEN_TIME *LCCM_LockRequest_GetLockUntil(const LCCM_LOCKREQUEST *el);
/**
* Set the property @ref LCCM_LOCKREQUEST_LockUntil
*/
void LCCM_LockRequest_SetLockUntil(LCCM_LOCKREQUEST *el, const GWEN_TIME *d);


#ifdef __cplusplus
} /* __cplusplus */
#endif


#endif /* LOCKREQUEST_L_H */
